C4Component
    title C4 Component Diagram - Copper Print Gallery System (Refined)

    Container_Boundary(web_app, "Web Application") {
        Component(ui_components, "UI Components", "React", "Reusable UI elements (e.g., Gallery, ImageViewer)")
        Component(state_management, "State Management", "Redux", "Manages application state")
        Component(api_client, "API Client", "Axios", "Handles API requests to backend")
        Component(asset_loader, "Asset Loader", "React", "Loads images and static assets from CDN")
        Component(auth_client, "Auth Client", "Auth0 SDK", "Handles authentication with Auth0")
        Component(web_logger, "Logger", "JavaScript", "Logs client-side events and errors")
    }

    Container_Boundary(artist_web_app, "Artist Web Application") {
        Component(artist_ui, "Artist UI Components", "React", "UI for content management")
        Component(artist_state, "Artist State Management", "Redux", "Manages artist application state")
        Component(artist_api_client, "Artist API Client", "Axios", "Handles API requests to backend")
        Component(artist_auth_client, "Auth Client", "Auth0 SDK", "Handles authentication with Auth0")
        Component(artist_logger, "Logger", "JavaScript", "Logs client-side events and errors")
    }

    Container_Boundary(api_gateway, "API Gateway") {
        Component(request_router, "Request Router", "AWS API Gateway", "Routes incoming requests")
        Component(auth_middleware, "Auth Middleware", "Lambda Authorizer", "Validates Auth0 tokens")
        Component(rate_limiter, "Rate Limiter", "API Gateway", "Limits request rates")
    }

    Container_Boundary(content_service, "Content Management Service") {
        Component(content_handler, "Content Handler", "AWS Lambda", "Handles content-related operations")
        Component(metadata_manager, "Metadata Manager", "Node.js", "Manages artwork metadata")
        Component(gallery_organizer, "Gallery Organizer", "Node.js", "Organizes galleries and artwork order")
        Component(content_logger, "Logger", "Winston", "Logs Content Service events and errors")
    }

    Container_Boundary(search_service, "Search Service") {
        Component(search_handler, "Search Handler", "AWS Lambda", "Handles search requests")
        Component(query_builder, "Query Builder", "Elasticsearch DSL", "Builds complex search queries")
        Component(results_formatter, "Results Formatter", "Node.js", "Formats search results")
        Component(search_logger, "Logger", "Winston", "Logs Search Service events and errors")
    }

    Container_Boundary(image_service, "Image Processing Service") {
        Component(image_handler, "Image Handler", "AWS Lambda", "Handles image processing requests")
        Component(image_processor, "Image Processor", "Python/Pillow", "Processes and resizes images")
        Component(format_converter, "Format Converter", "Python/Pillow", "Converts image formats")
        Component(metadata_extractor, "Metadata Extractor", "Python/Pillow", "Extracts image metadata")
        Component(storage_manager, "Storage Manager", "Python", "Manages interactions with S3")
        Component(image_logger, "Logger", "Python logging", "Logs Image Service events and errors")
    }

    ContainerDb(database, "Database", "Amazon RDS, PostgreSQL", "Stores user data, artwork metadata, and gallery structure")
    ContainerDb(file_storage, "File Storage", "Amazon S3", "Stores processed images")

    System_Ext(cdn, "Content Delivery Network", "Amazon CloudFront")
    System_Ext(auth0, "Auth0", "Authentication Server")
    System_Ext(cloudwatch, "AWS CloudWatch", "Centralized Logging and Monitoring")

    Rel(ui_components, state_management, "Uses")
    Rel(ui_components, api_client, "Uses")
    Rel(ui_components, asset_loader, "Uses")
    Rel(ui_components, auth_client, "Uses")
    Rel(ui_components, web_logger, "Logs events")

    Rel(artist_ui, artist_state, "Uses")
    Rel(artist_ui, artist_api_client, "Uses")
    Rel(artist_ui, artist_auth_client, "Uses")
    Rel(artist_ui, artist_logger, "Logs events")

    Rel(request_router, auth_middleware, "Uses")
    Rel(request_router, rate_limiter, "Uses")

    Rel(content_handler, metadata_manager, "Uses")
    Rel(content_handler, gallery_organizer, "Uses")
    Rel(content_handler, content_logger, "Logs events")

    Rel(search_handler, query_builder, "Uses")
    Rel(search_handler, results_formatter, "Uses")
    Rel(search_handler, search_logger, "Logs events")

    Rel(image_handler, image_processor, "Uses")
    Rel(image_handler, format_converter, "Uses")
    Rel(image_handler, metadata_extractor, "Uses")
    Rel(image_handler, storage_manager, "Uses")
    Rel(image_handler, image_logger, "Logs events")

    Rel(api_client, request_router, "Sends requests to", "HTTPS")
    Rel(artist_api_client, request_router, "Sends requests to", "HTTPS")
    Rel(asset_loader, cdn, "Loads assets from", "HTTPS")

    Rel(auth_middleware, auth0, "Validates tokens with", "HTTPS")
    Rel(request_router, content_handler, "Routes to", "HTTPS")
    Rel(request_router, search_handler, "Routes to", "HTTPS")
    Rel(request_router, image_handler, "Routes to", "HTTPS")

    Rel(content_handler, database, "Reads/Writes", "SQL")
    Rel(search_handler, database, "Reads", "SQL")
    Rel(storage_manager, file_storage, "Reads/Writes", "HTTPS")

    Rel(cdn, file_storage, "Retrieves assets from", "HTTPS")

    Rel(web_logger, cloudwatch, "Sends logs", "HTTPS")
    Rel(artist_logger, cloudwatch, "Sends logs", "HTTPS")
    Rel(content_logger, cloudwatch, "Sends logs", "HTTPS")
    Rel(search_logger, cloudwatch, "Sends logs", "HTTPS")
    Rel(image_logger, cloudwatch, "Sends logs", "HTTPS")

    UpdateLayoutConfig($c4ShapeInRow="3", $c4BoundaryInRow="2")