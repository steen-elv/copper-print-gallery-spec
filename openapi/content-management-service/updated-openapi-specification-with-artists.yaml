openapi: 3.1.0
info:
  title: Copper Print Gallery Content Management Service API
  version: 1.1.0
  description: API for managing galleries, copper print artworks, and artists in the Copper Print Gallery system

# ... (previous servers and existing paths remain the same)

paths:
  # ... (previous paths remain the same)

  /artists:
    post:
      summary: Register a new artist
      description: Creates a new artist account
      requestBody:
        $ref: '#/components/requestBodies/ArtistCreate'
      responses:
        '201':
          $ref: '#/components/responses/ArtistResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
    get:
      summary: List artists
      description: Retrieves a list of all artists (admin only)
      security:
        - BearerAuth: []
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/limit'
      responses:
        '200':
          $ref: '#/components/responses/ArtistListResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'

  /artists/{artistId}:
    get:
      summary: Get artist details
      description: Retrieves details of a specific artist
      security:
        - BearerAuth: []
      parameters:
        - $ref: '#/components/parameters/artistId'
      responses:
        '200':
          $ref: '#/components/responses/ArtistResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
    put:
      summary: Update artist details
      description: Updates an existing artist's details
      security:
        - BearerAuth: []
      parameters:
        - $ref: '#/components/parameters/artistId'
      requestBody:
        $ref: '#/components/requestBodies/ArtistUpdate'
      responses:
        '200':
          $ref: '#/components/responses/ArtistResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

components:
  schemas:
    # ... (previous schemas remain the same)

    Artist:
      type: object
      properties:
        id:
          type: integer
        username:
          type: string
        email:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        bio:
          type: string
        website:
          type: string
        defaultLanguage:
          type: string
          enum: [en, da]
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    ArtistCreate:
      type: object
      required:
        - username
        - email
        - password
      properties:
        username:
          type: string
        email:
          type: string
          format: email
        password:
          type: string
          format: password
        firstName:
          type: string
        lastName:
          type: string
        bio:
          type: string
        website:
          type: string
        defaultLanguage:
          type: string
          enum: [en, da]

    ArtistUpdate:
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        bio:
          type: string
        website:
          type: string
        defaultLanguage:
          type: string
          enum: [en, da]

    ArtistList:
      type: object
      properties:
        artists:
          type: array
          items:
            $ref: '#/components/schemas/Artist'
        totalCount:
          type: integer
        currentPage:
          type: integer
        totalPages:
          type: integer

  parameters:
    # ... (previous parameters remain the same)

    artistId:
      in: path
      name: artistId
      required: true
      schema:
        type: integer
      description: Unique identifier of the artist

  responses:
    # ... (previous responses remain the same)

    ArtistResponse:
      description: Successful response with artist details
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Artist'
          example:
            id: 1
            username: "johndoe"
            email: "john@example.com"
            firstName: "John"
            lastName: "Doe"
            bio: "Copper print artist specializing in urban landscapes"
            website: "https://johndoe-art.com"
            defaultLanguage: "en"
            createdAt: "2023-07-01T10:00:00Z"
            updatedAt: "2023-07-15T14:30:00Z"

    ArtistListResponse:
      description: Successful response with list of artists
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ArtistList'
          example:
            artists:
              - id: 1
                username: "johndoe"
                email: "john@example.com"
                firstName: "John"
                lastName: "Doe"
                bio: "Copper print artist specializing in urban landscapes"
                website: "https://johndoe-art.com"
                defaultLanguage: "en"
                createdAt: "2023-07-01T10:00:00Z"
                updatedAt: "2023-07-15T14:30:00Z"
              - id: 2
                username: "janedoe"
                email: "jane@example.com"
                firstName: "Jane"
                lastName: "Doe"
                bio: "Experimental copper print artist focusing on abstract designs"
                website: "https://janedoe-art.com"
                defaultLanguage: "da"
                createdAt: "2023-07-02T11:00:00Z"
                updatedAt: "2023-07-16T09:45:00Z"
            totalCount: 2
            currentPage: 1
            totalPages: 1

  requestBodies:
    # ... (previous request bodies remain the same)

    ArtistCreate:
      description: Request body for registering a new artist
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ArtistCreate'
          example:
            username: "newartist"
            email: "newartist@example.com"
            password: "securepassword123"
            firstName: "New"
            lastName: "Artist"
            bio: "Emerging copper print artist with a focus on natural landscapes"
            website: "https://newartist-portfolio.com"
            defaultLanguage: "en"

    ArtistUpdate:
      description: Request body for updating an existing artist
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ArtistUpdate'
          example:
            firstName: "Updated"
            lastName: "Name"
            bio: "Award-winning copper print artist specializing in both urban and natural landscapes"
            website: "https://updated-artist-portfolio.com"
            defaultLanguage: "da"

# ... (rest of the specification remains the same)
