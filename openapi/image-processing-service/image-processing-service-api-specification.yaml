openapi: 3.1.0
info:
  title: Copper Print Gallery Image Processing Service API
  version: 3.4.0
  description: API for processing images and specifying the callback interface for the Content Management Service

servers:
  - url: '{protocol}://{environment}.image.{domain}/api/v1'
    variables:
      protocol:
        enum: [http, https]
        default: https
      environment:
        enum: [dev, staging, prod]
        default: prod
      domain:
        default: api.copperprintgallery.com
        description: Base domain for the API

paths:
  /process:
    post:
      summary: Initiate image processing
      description: Start asynchronous processing of an image from temporary storage to create all standard image versions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProcessingRequest'
            example:
              baseImageId: "123e4567-e89b-12d3-a456-426614174000"
              originalImageReference: "temp-storage://uploads/original/123e4567-e89b-12d3-a456-426614174000.jpg"
      responses:
        '202':
          $ref: '#/components/responses/AsyncProcessingResponse'
        '400':
          $ref: '#/components/responses/BadRequest'

  /images/{baseImageId}:
    delete:
      summary: Delete all versions of an image
      description: Remove all versions of an image from storage
      parameters:
        - name: baseImageId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: All image versions successfully deleted
        '404':
          $ref: '#/components/responses/NotFound'

  /callback:
    post:
      summary: Processing result callback
      description: Endpoint to be implemented by the Content Management Service to receive processing results
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProcessingResult'
            example:
              baseImageId: "123e4567-e89b-12d3-a456-426614174000"
              status: "completed"
              versions:
                - versionIdentifier: "original"
                  storageBucket: "copper-print-gallery-images"
                  storagePath: "originals/123e4567-e89b-12d3-a456-426614174000.jpg"
                  publicUrl: "https://cdn.copperprintgallery.com/originals/123e4567-e89b-12d3-a456-426614174000.jpg"
                  width: 3000
                  height: 2000
                  fileSize: 5242880
                  format: "jpeg"
                - versionIdentifier: "thumbnail"
                  storageBucket: "copper-print-gallery-images"
                  storagePath: "thumbnails/123e4567-e89b-12d3-a456-426614174000_thumbnail.jpg"
                  publicUrl: "https://cdn.copperprintgallery.com/thumbnails/123e4567-e89b-12d3-a456-426614174000_thumbnail.jpg"
                  width: 300
                  height: 200
                  fileSize: 51200
                  format: "jpeg"
                - versionIdentifier: "medium"
                  storageBucket: "copper-print-gallery-images"
                  storagePath: "medium/123e4567-e89b-12d3-a456-426614174000_medium.jpg"
                  publicUrl: "https://cdn.copperprintgallery.com/medium/123e4567-e89b-12d3-a456-426614174000_medium.jpg"
                  width: 800
                  height: 533
                  fileSize: 204800
                  format: "jpeg"
              exifData:
                Make: "Canon"
                Model: "EOS 5D Mark IV"
                DateTimeOriginal: "2023:06:15 14:30:22"
                ApertureValue: "8.0"
                ExposureTime: "1/250"
                FocalLength: "50.0 mm"
                ISO: "100"
      responses:
        '200':
          description: Callback received successfully
        '400':
          $ref: '#/components/responses/BadRequest'

components:
  schemas:
    ProcessingRequest:
      type: object
      required:
        - baseImageId
        - originalImageReference
      properties:
        baseImageId:
          type: string
        originalImageReference:
          type: string
          description: Reference to the original image in temporary storage

    ProcessedImageVersion:
      type: object
      properties:
        versionIdentifier:
          type: string
        storageBucket:
          type: string
        storagePath:
          type: string
        publicUrl:
          type: string
        width:
          type: integer
        height:
          type: integer
        fileSize:
          type: integer
        format:
          type: string

    ProcessingResult:
      type: object
      required:
        - baseImageId
        - status
        - versions
      properties:
        baseImageId:
          type: string
        status:
          type: string
          enum: [completed, failed]
        versions:
          type: array
          items:
            $ref: '#/components/schemas/ProcessedImageVersion'
        exifData:
          type: object
          additionalProperties: true
        error:
          type: string
          description: Error message if processing failed

  responses:
    AsyncProcessingResponse:
      description: Asynchronous processing initiated
      content:
        application/json:
          schema:
            type: object
            properties:
              baseImageId:
                type: string
              message:
                type: string
          example:
            baseImageId: "123e4567-e89b-12d3-a456-426614174000"
            message: "Image processing initiated successfully"

    BadRequest:
      description: Bad request
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
          example:
            error: "Invalid processing request. Missing required field: originalImageReference"

    NotFound:
      description: Resource not found
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
          example:
            error: "Image with baseImageId '123e4567-e89b-12d3-a456-426614174000' not found"

  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

security:
  - BearerAuth: []